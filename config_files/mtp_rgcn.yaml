model: rgcn
ax_search:
  parameters:
    # RGCN
    - name: rgcn.decoder.model
      type: fixed
      value: distmult
    - name: rgcn.decoder.scorer
      type: fixed
      value: DistMultScorer
    - name: rgcn_embedder.dim
      type: choice
      values: [128, 256, 512]
      is_ordered: True
    - name: rgcn_embedder.initialize
      type: choice
      values: [ xavier_normal_, xavier_uniform_, normal_, uniform_ ]
    - name: rgcn_embedder.initialize_args.normal_.mean
      type: fixed
      value: 0.0
    - name: rgcn_embedder.initialize_args.normal_.std
      type: range
      bounds: [ 0.00001, 1.0 ]
      log_scale: True
    - name: rgcn_embedder.initialize_args.uniform_.a
      type: range
      bounds: [ -1.0, -0.00001 ]
    - name: rgcn_embedder.initialize_args.xavier_uniform_.gain
      type: fixed
      value: 1.0
    - name: rgcn_embedder.initialize_args.xavier_normal_.gain
      type: fixed
      value: 1.0
    - name: rgcn_embedder.edge_dropout
      type: range
      bounds: [-0.5, 0.5]
    - name: rgcn_embedder.self_loop_dropout
      type: range
      bounds: [ -0.5, 0.5 ]
    - name: rgcn_embedder.self_loop_dropout
      type: choice
      values: ['bases', 'block']
    - name: rgcn_embedder.num_bases_or_blocks
      type: choice
      values: [ 2, 4, 8, 16 ]
      is_ordered: True
    - name: rgcn_embedder.num_layers
      type: choice
      values: [ 2, 4, 8, 16 ]
      is_ordered: True
    - name: rgcn_embedder.normalization
      type: choice
      values: [ True, False ]
    # embedding regularization
    - name: rgcn_embedder.regularize
      type: choice
      values: [ '', 'l3', 'l2', 'l1' ]
      is_ordered: True
    - name: rgcn_embedder.regularize_args.weighted
      type: choice
      values: [ True, False ]
    - name: ntn.entity_embedder.regularize_weight
      type: range
      bounds: [ 1.0e-20, 1.0e-01 ]
      log_scale: True
    - name: ntn.relation_embedder.regularize_weight
      type: range
      bounds: [ 1.0e-20, 1.0e-01 ]
      log_scale: True
    - name: rgcn_embedder.normalization
      type: choice
      values: [ 'relu', 'tanh', 'softmax' ]



