1vsAll: {class_name: TrainingJob1vsAll}
KvsAll:
  class_name: TrainingJobKvsAll
  label_smoothing: 0.0
  query_types: {_po: true, s_o: false, sp_: true}
ax_search:
  class_name: AxSearchJob
  num_sobol_trials: 15
  num_trials: 15
  parameter_constraints: []
  parameters:
  - name: model
    type: choice
    values: [ntn, reciprocal_relations_model]
  - {name: train.batch_size, type: fixed, value: 32}
  - {name: train.type, type: fixed, value: negative_sampling}
  - name: train.optimizer
    type: choice
    values: [Adam, Adagrad]
  - {name: train.loss, type: fixed, value: kl}
  - bounds: [0.0003, 1.0]
    log_scale: true
    name: train.optimizer_args.lr
    type: range
  - {name: train.lr_scheduler, type: fixed, value: ReduceLROnPlateau}
  - {name: train.lr_scheduler_args.mode, type: fixed, value: max}
  - {name: train.lr_scheduler_args.factor, type: fixed, value: 0.95}
  - {name: train.lr_scheduler_args.threshold, type: fixed, value: 0.0001}
  - bounds: [0, 10]
    name: train.lr_scheduler_args.patience
    type: range
  - is_ordered: true
    name: lookup_embedder.dim
    type: choice
    values: [32, 64]
  - is_ordered: true
    name: ntn.relation_embedder.dim
    type: choice
    values: [2, 4, 8, 16]
  - name: lookup_embedder.initialize
    type: choice
    values: [xavier_normal_, xavier_uniform_, normal_, uniform_]
  - {name: lookup_embedder.initialize_args.normal_.mean, type: fixed, value: 0.0}
  - bounds: [1.0e-05, 1.0]
    log_scale: true
    name: lookup_embedder.initialize_args.normal_.std
    type: range
  - bounds: [-1.0, -1.0e-05]
    name: lookup_embedder.initialize_args.uniform_.a
    type: range
  - {name: lookup_embedder.initialize_args.xavier_uniform_.gain, type: fixed, value: 1.0}
  - {name: lookup_embedder.initialize_args.xavier_normal_.gain, type: fixed, value: 1.0}
  - is_ordered: true
    name: lookup_embedder.regularize
    type: choice
    values: ['', l3, l2, l1]
  - name: lookup_embedder.regularize_args.weighted
    type: choice
    values: [true, false]
  - bounds: [1.0e-20, 0.1]
    log_scale: true
    name: ntn.entity_embedder.regularize_weight
    type: range
  - bounds: [1.0e-20, 0.1]
    log_scale: true
    name: ntn.relation_embedder.regularize_weight
    type: range
  - bounds: [-0.5, 0.5]
    name: ntn.entity_embedder.dropout
    type: range
  - bounds: [-0.5, 0.5]
    name: ntn.relation_embedder.dropout
    type: range
  - bounds: [1, 1000]
    log_scale: true
    name: negative_sampling.num_negatives_s
    type: range
  - bounds: [1, 1000]
    log_scale: true
    name: negative_sampling.num_negatives_o
    type: range
  sobol_seed: 0
console:
  format: {}
  quiet: false
conve:
  2D_aspect_ratio: 2
  class_name: ConvE
  convolution_bias: true
  entity_embedder: {+++: +++, dropout: 0.2, type: lookup_embedder}
  feature_map_dropout: 0.2
  filter_size: 3
  padding: 0
  projection_dropout: 0.3
  relation_embedder: {+++: +++, dropout: 0.2, type: lookup_embedder}
  round_dim: false
  stride: 1
dataset:
  +++: +++
  files:
    +++: +++
    entity_ids: {filename: entity_ids.del, type: map}
    entity_strings: {filename: entity_strings.del, type: idmap}
    relation_ids: {filename: relation_ids.del, type: map}
    relation_strings: {filename: relation_ids.del, type: map}
    test: {filename: test.del, size: 20466, split_type: test, type: triples}
    test_without_unseen: {filename: test_without_unseen.del, size: 20438, split_type: test,
      type: triples}
    train: {filename: train.del, size: 272115, split_type: train, type: triples}
    train_sample: {filename: train_sample.del, size: 17535, split_type: train, type: triples}
    valid: {filename: valid.del, size: 17535, split_type: valid, type: triples}
    valid_without_unseen: {filename: valid_without_unseen.del, size: 17526, split_type: valid,
      type: triples}
  name: fb15k-237
  num_entities: 14541
  num_relations: 237
  pickle: true
entity_ranking:
  chunk_size: -1
  class_name: EntityRankingJob
  filter_splits: [train, valid]
  filter_with_test: true
  hits_at_k_s: [1, 3, 10, 50, 100, 200, 300, 400, 500, 1000]
  metrics_per: {argument_frequency: false, head_and_tail: false, relation_type: true}
  tie_handling: rounded_mean_rank
eval: {batch_size: 32, num_workers: 0, pin_memory: false, split: valid, trace_level: epoch,
  type: entity_ranking}
grid_search:
  class_name: GridSearchJob
  parameters: {+++: +++}
  run: true
import: [ntn, reciprocal_relations_model]
job: {device: cuda, type: train}
lookup_embedder:
  class_name: LookupEmbedder
  dim: 64
  dropout: 0.0
  initialize: normal_
  initialize_args:
    +++: +++
    normal_: {mean: 0.0, std: 0.05937150793669212}
    uniform_: {a: -0.4164774972832016}
    xavier_normal_: {gain: 1.0}
    xavier_uniform_: {gain: 1.0}
  normalize: {p: -1.0}
  pretrain: {ensure_all: false, model_filename: ''}
  regularize: lp
  regularize_args: {+++: +++, p: 1, weighted: true}
  regularize_weight: 0.0
  round_dim_to: []
  sparse: false
manual_search:
  class_name: ManualSearchJob
  configurations: []
  run: true
model: reciprocal_relations_model
modules: [kge.model.embedder, kge.model, kge.job]
negative_sampling:
  class_name: TrainingJobNegativeSampling
  filtering: {implementation: fast_if_available, o: false, p: false, s: false, split: ''}
  frequency: {smoothing: 1}
  implementation: triple
  num_samples: {o: 216, p: 0, s: 1}
  sampling_type: uniform
  shared: false
  shared_type: default
  with_replacement: true
ntn:
  class_name: NTN
  entity_embedder: {+++: +++, dropout: 0.35726793482899666, regularize_weight: 1.4602764713192907e-05,
    type: lookup_embedder}
  initialize: normal_
  initialize_args: {+++: +++, mean: 0.0, std: 0.02}
  relation_embedder: {+++: +++, dim: 8, dropout: -0.3228489626199007, regularize_weight: 1.860215415672346e-06,
    type: ntn_relation_embedder}
ntn_relation_embedder:
  base_embedder: {+++: +++, type: lookup_embedder}
  class_name: NTNRelationEmbedder
  dim: -1
  dropout: -1.0
  initialize: normal_
  initialize_args: {+++: +++}
  normalize: {p: -1.0}
  regularize: ''
  regularize_args: {p: -1, weighted: false}
  regularize_weight: -1.0
  round_dim_to: []
  sparse: false
random_seed: {default: -1, numba: -1, numpy: -1, python: -1, torch: -1}
reciprocal_relations_model:
  base_model: {+++: +++, type: ntn}
  class_name: ReciprocalRelationsModel
search:
  device_pool: []
  num_workers: 1
  on_error: abort
  type: ax_search
train:
  abort_on_nan: true
  auto_correct: true
  batch_size: 32
  checkpoint: {every: 5, keep: 3, keep_init: true}
  loss: kl
  loss_arg: .nan
  lr_scheduler: ReduceLROnPlateau
  lr_scheduler_args: {+++: +++, factor: 0.95, mode: max, patience: 5, threshold: 0.0001}
  lr_warmup: 0
  max_epochs: 100
  num_workers: 0
  optimizer:
    +++: +++
    default:
      args: {+++: +++, lr: 0.037498905530219145}
      type: Adagrad
  pin_memory: false
  split: train
  subbatch_auto_tune: false
  subbatch_size: -1
  trace_level: epoch
  type: negative_sampling
  visualize_graph: false
training_loss: {class_name: TrainingLossEvaluationJob}
user: {+++: +++}
valid:
  early_stopping:
    patience: 10
    threshold: {epochs: 50, metric_value: 0.05}
  every: 5
  metric: mean_reciprocal_rank_filtered_with_test
  metric_expr: float("nan")
  metric_max: true
  split: valid
  trace_level: epoch
